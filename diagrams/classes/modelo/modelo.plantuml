@startuml modelo-actual

class Tablero {
    + mover(dir: Direccion)
    + agregarJugador(jug: Jugador)
    + obtenerPosicion(): Celda
    + iniciarEn(celda: Celda)
}

class Jugador {
    - movimientos: Int

    + sumarMovimientos()
    + restarMovimientos()
    + sorpresaFavorable()
    + sorpresaDesfavorable()
    + reemplazarVehiculo()
    + mover(dir: Direccion)
    + movimientos()
}

class Calle {
    + cruzarCon(jug: Jugador)
    + proximaEsquina(esquinaActual: Celda): Celda
    + contiene(esquina: Celda): Boolean
    + agregarCelda(esquina: Celda)
}

interface Vehiculo {
    + {abstract} reemplazarVehiculo(): Vehiculo
    + {abstract} pozo()
    + {abstract} piquete()
    + {abstract} controlPolicial()
}

interface Modificador {
    + {abstract} cruzarCon(jug: Jugador)
}

class Celda {
    - f: Int
    - c: Int

    - obtenerEsquinas(): Array<Celdas>
    - obtenerCalleDeEsquina(esquina: Celda): Calle
    + agregarCalle(calle: Calle)
    + mover(jug: Jugador, dir: Direccion): Celda
}

class Registro {

}

class GeneradorDeCiudad {
    - filas: Int
    - columnas: Int
    + buscarCelda(celda: Celda): Celda
    - generarCeldas():
    - generarCaminos():
    - agregarCeldas(esq1: Celda, esq2: Celda, mod: Modificador)
}

interface Direccion {
    + {abstract} mover(f, c, esquinas: Array<Celdas>): Celda
}

Tablero -left-> Jugador
Tablero --> GeneradorDeCiudad
GeneradorDeCiudad .down.> Celda
Jugador -left-> Vehiculo
Jugador --> Celda
Tablero -right-> Registro
Calle -left-> Modificador
Calle .left.> Jugador
Celda ..> Jugador
Modificador .left.> Vehiculo
Celda "2" -- "4" Calle
Modificador .up.> Jugador
Tablero ..> Direccion
Jugador ..> Direccion
Celda .right.> Direccion

@enduml

@startuml interface-direccion

interface Direccion {
    + {abstract} mover(f, c, esquinas: Array<Celdas>): Celda
}

class Arriba {
    + mover(f, c, esquinas: Array<Celdas>): Celda
}

class Abajo {
    + mover(f, c, esquinas: Array<Celdas>): Celda
}

class Derecha {
    + mover(f, c, esquinas: Array<Celdas>): Celda
}

class Izquierda {
    + mover(f, c, esquinas: Array<Celdas>): Celda
}

Arriba ..|> Direccion
Abajo ..|> Direccion
Derecha .up.|> Direccion
Izquierda .up.|> Direccion

@enduml

@startuml interface-vehiculo

interface Vehiculo {
    + {abstract} reemplazarVehiculo(): Vehiculo
    + {abstract} pozo()
    + {abstract} piquete()
    + {abstract} controlPolicial()
}

class 4x4 { 
    + pozo()
    + piquete()
    + controlPolicial()
    + reemplazarVehiculo(): Vehiculo
}

class Moto {
    + pozo()
    + piquete()
    + controlPolicial()
    + reemplazarVehiculo(): Vehiculo
}

class Auto {
    + pozo()
    + piquete()
    + controlPolicial()
    + reemplazarVehiculo(): Vehiculo
}

4x4 .up.|> Vehiculo
Auto ..|> Vehiculo
Moto ..|> Vehiculo

@enduml

@startuml interface-modificador

interface Modificador {
    + {abstract} cruzarCon(jug: Jugador)
}

class Pozo {
    + cruzarCon(jug:Jugador)
}

class ControlPolicial {
    + cruzarCon(jug:Jugador)
}

class Piquete {
    + cruzarCon(jug:Jugador)
}

class Favorable {
    + cruzarCon(jug:Jugador)
}

class Desfavorable {
    + cruzarCon(jug:Jugador)
}

class CambioDeVehiculo {
    + cruzarCon(jug:Jugador)
}

class Nulo {
    + cruzarCon(jug:Jugador)
}

Favorable ..|> Modificador
Desfavorable .left.|> Modificador
CambioDeVehiculo .up.|> Modificador
Pozo .right.|> Modificador
Piquete ..|> Modificador
ControlPolicial .up.|> Modificador
Nulo ..|> Modificador

@enduml